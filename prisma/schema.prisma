// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Job {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    title String @db.VarChar(75)
    companyName String @db.VarChar(150)
    city String @db.VarChar(30)
    country String @db.VarChar(30)
    function String @db.VarChar(75)
    schedule String @db.VarChar(40)
    imageUrl String @db.VarChar(200)
    link String @db.VarChar(200)
    description Description[]
    qualification Qualification[]
    savedJob SavedJob[]
    introduction Introduction[]
}

model Description {
    id String @id @default(cuid())
    content String @db.VarChar(250)
    job Job @relation(fields: [jobId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    jobId String
    @@index([jobId])
}

model Qualification {
    id String @id @default(cuid())
    content String @db.VarChar(250)
    job Job @relation(fields: [jobId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    jobId String
    @@index([jobId])
}

model SavedJob {
  @@id([userId, jobId])
  job Job @relation(fields: [jobId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  jobId String
  userId String @db.VarChar(200)
  @@index([jobId])
  @@index([userId])
}

model Introduction {
  @@id([userId, jobId])
  job Job @relation(fields: [jobId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  jobId String
  userId String @db.VarChar(200)
  active Boolean @default(true)
  @@index([jobId])
  @@index([userId])

}